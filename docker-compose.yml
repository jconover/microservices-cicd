version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service:8000
      - USER_SERVICE_URL=http://user-service:8000
      - PAYMENT_SERVICE_URL=http://payment-service:8000
      - NOTIFICATION_SERVICE_URL=http://notification-service:8000
    networks:
      - microservices-network
    depends_on:
      - auth-service
      - user-service
      - payment-service
      - notification-service

  # Microservices
  auth-service:
    build: ./services/auth-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/auth_db
      - REDIS_URL=redis://redis:6379/0
    networks:
      - microservices-network
    depends_on:
      - postgres
      - redis

  user-service:
    build: ./services/user-service
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/user_db
      - REDIS_URL=redis://redis:6379/1
    networks:
      - microservices-network
    depends_on:
      - postgres
      - redis

  payment-service:
    build: ./services/payment-service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/payment_db
      - REDIS_URL=redis://redis:6379/2
    networks:
      - microservices-network
    depends_on:
      - postgres
      - redis

  notification-service:
    build: ./services/notification-service
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/notification_db
      - REDIS_URL=redis://redis:6379/3
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    networks:
      - microservices-network
    depends_on:
      - postgres
      - redis
      - rabbitmq

  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=auth_db,user_db,payment_db,notification_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - microservices-network

  redis:
    image: redis:7-alpine
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    ports:
      - "15672:15672"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres_data:
